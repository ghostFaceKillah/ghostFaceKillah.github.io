*h2*
How to build small self driving car?

My recent side project is a small self driving car.

*wide-div*
<img src="img/car/car_works_1.gif">
<img src="img/car/car_works_2.gif">
<img src="img/car/car_works_3.gif">





*h4*
Idea

*img*
img/car/how_it_works.jpg











*h4*
Beginnings - First car

Started the story with learning a bit about electronics.
Discovered a great book:
<a href="https://www.amazon.com/Make-Electronics-Discovery-Charles-Platt/dp/0596153740">
Make: electronics
</a>.
and learned a little bit about basic electronics.

*img*
img/car/blinkenlights.gif

Bought a little green car, disassembled it completely.  I didn't understand too
much about about how this stuff works, just bought the cheapest one in
Action.nl.

*img*
img/car/vanilla_green.jpg

Deconstructed it looks like this.

*img*
img/car/green_basic_deconstruct.jpg

Actually construction of it is really simple, there are two wires
going to battery, and two wires going to each engine front and back.

*img*
img/car/green/green_pcb_closeup.jpg


So we can easily figure out that 
if we can control when electricty goes to the motor, we
can control motor.

We cannot drive the motor directly by raspi output pins though,
as the current is too high.
If we connected motor, it would damage raspi.

You can buy motor controller for raspi or be thrifty, and implement own.  I
have chosen to follow
<a href="https://business.tutsplus.com/tutorials/controlling-dc-motors-using-python-with-a-raspberry-pi--cms-20051">
this tutorial </a> and it worked.

*img*
img/car/green_engine_controller.jpg

Actually, I have learned soon that the tutorial contains a small error.
Can't drive two motors as shown

Read the chip factsheet, fixed the bug. 
Can control car completely from raspi.

*iframe*
https://drive.google.com/file/d/0Bw2eHK8Zx0mLZ0ZxaVQ3UDdhNGM/preview

*h4*
Construction

Implemented a basic remote control system that sends driving command over TCP
socket.  Not sure about how much power Rpi needs, bought a really big power
pack for mobile phone.  When it comes to joining stuff together, a lot of
ziptie engineering. Thanks roadkill!

*img* 
img/car/green/green_heavy_iso_03.jpg

*img* 
img/car/green/green_heavy_iso_02.jpg

*img* 
img/car/green_ready_front.jpg

*img* 
img/car/green_ready_top.jpg


*h4*
Fail - too heavy

*iframe*
https://drive.google.com/file/d/0Bw2eHK8Zx0mLWDV1Ui1NeHNuSE0/preview

That one was way 2 heavy. Bought a way lighter battery with less capactiy.
We were really lucky about the Pokemon Go craze, as it meant a lot of cheap
mobile battery packs.

*img* 
img/car/green_ready_light.jpg

*img* 
img/car/green_ready_light_side.jpg






*h4*
Camera

A lot of trial and error.  First followed 
<a href="https://github.com/hamuchiwa/AutoRCCar/blob/master/raspberryPi/stream_client.py">
this 
</a> implementation, then followd where it was taken from - picamera recipes.

*img* 
img/car/measuring_latency_03.jpg

Measuring latency takes both hands.

*iframe* 
https://drive.google.com/file/d/0Bw2eHK8Zx0mLSHM5X1Btam5iWEk/preview









*h4*
Remote control

Remote control
first tried TCP
then tried UDP











*h4*
Second car

*img* 
img/car/black/black_vanilla.jpg

I learned at this point that some of more advanced RC cars use more
refined servo-style motor at front. These use PWM pulse width modulation
and need a special hardware controller.


*img* 
img/car/black/black_disassembly.jpg



Luckily this one was not that expensive, 20-30 euro so still has simplified
steering with linear engine driving the front wheel, as tested by most direct
of methods.

*img* 
img/car/black/black_disassembly_01.jpg


Cleaned up the control module a bit and fit it into slightly
tighter package.


*img* 
img/car/black/black_engine_controller_clean.jpg

Cleaned up the control module a bit and fit it into slightly
tighter package.

*img* 
img/car/black/black_iso_no_cam_2.jpg

Added high quality camera holder.

*img* 
img/car/black/black_ready_iso_01.jpg

Show vid/black_is_fast











*h4*
Machine learning


Idea was to do Nvidia paper, seen it used at Udacity
self driving car nanodegree and in comma.ai paper.

Did a bit data gathering, 2 sessions of around hour.
Started off with gathering one big track, around 10 meters
around the whole house.

Trained a neural net like in the Nvidia paper.

It didn't work.

Then decided to simplify the problem to one turn.
Gathered a lot of data another time.

Didn't work!

Annotated the data manually again to control for dynamic problems.

Still didn't work!


Cast to greyscale.

Implemented data augmentation based on brigthness and contrast.

It worked.

*h4*
Lessons

* be patient and persistent
* need a bit of money
